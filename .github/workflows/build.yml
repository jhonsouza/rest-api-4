name: Build build
on:
  push:
    branches:
      - 'main'
      - release/*

env:
  REPO:  jhonatans/test

jobs:
  build:
    runs-on: ubuntu-latest
    steps:
      - name: clone repo
        id: clone
        uses: actions/checkout@v2
        with:
          fetch-depth: 0
      - name: Build Image
        id: buildx
        uses: docker/setup-buildx-action@v1
      - name: Check buildx
        run: |
          echo "name: ${{ steps.buildx.outputs.name }}"
          echo "status: ${{ steps.buildx.outputs.status }}"
      - name: Login Docker
        uses: docker/login-action@v1
        with:
          username: jhonatans
          password: ${{ secrets.DOCKER_TOKEN}}
      - name: Get branch
        id: branch
        shell: bash
        run: |
          echo "::set-output name=branch::$(echo ${GITHUB_REF#refs/*/#} | cut -d/ -f3)"
      - name: Taggin image
        shell: bash
        id: vars
        run: |
          echo ${{steps.branch.outputs.branch}}
          echo "::set-output name=tag::$(git rev-parse --short HEAD)"
          echo "::set-output name=author::$(git log -n 1 | grep Author | cut -d: -d' ' -f2,3)"
          git log -n 1 | grep Author | cut -d: -d' ' -f2,3
      # - name: Test
      #   run: |
      #     npm i && npm test
      - name: Docker Push
        run: |
          docker build -t jhonatans/rest-api-4 .
          docker tag jhonatans/rest-api-4:latest jhonatans/rest-api-4:${{ steps.vars.outputs.tag}}
          docker push --all-tags jhonatans/rest-api-4
        # uses: docker/build-push-action@v2
        # id: docker
        # with:
        #   push: true
        #   tags: |
        #     ${{ env.REPO }}:latest
        #     ${{ env.REPO }}:test
        #     jhonatans/test:${{ steps.vars.outputs.tag }}
      - name: Dump GitHub context
        env:
          GITHUB_CONTEXT: ${{ toJSON(github) }}
        run: echo "$GITHUB_CONTEXT"
      - name: Dump job context
        env:
          JOB_CONTEXT: ${{ toJSON(job) }}
        run: echo "$JOB_CONTEXT"
      - name: Dump steps context
        env:
          STEPS_CONTEXT: ${{ toJSON(steps) }}
        run: echo "$STEPS_CONTEXT"
      - name: Dump runner context
        env:
          RUNNER_CONTEXT: ${{ toJSON(runner) }}
        run: echo "$RUNNER_CONTEXT"
      - name: Dump strategy context
        env:
          STRATEGY_CONTEXT: ${{ toJSON(strategy) }}
        run: echo "$STRATEGY_CONTEXT"
      - name: Dump matrix context
        env:
          MATRIX_CONTEXT: ${{ toJSON(matrix) }}
        run: echo "$MATRIX_CONTEXT"
    outputs: 
      jobStatus: ${{job.status}}